==================================================================================================================================================================================================================================================================
== Test 12: List Before and After Append
== Creates an archive, lists its files, appends more files to the archive, then
== lists the archive's files a second time.
Running test...
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Step 1
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Action 1: Run File Setup
-- Copies files to be archived into current directory
Expected output is in file 'test_results/raw/project_01-12-1-expected.tmp'
Actual output is in file 'test_results/raw/project_01-12-1-actual.tmp'
Test PASSED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Step 2
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Action 1: Run Archive Creation
-- Create an initial archive using 'minitar'
Expected output is in file 'test_results/raw/project_01-12-2-expected.tmp'
Actual output is in file 'test_results/raw/project_01-12-2-actual.tmp'
Test PASSED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Step 3
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Action 1: Run Archive List 1
-- List the files in the previously created archive
Expected output is in file 'test_results/raw/project_01-12-3-expected.tmp'
Actual output is in file 'test_results/raw/project_01-12-3-actual.tmp'
Error: VALGRIND CHECK FAILED. Output:


== Valgrind Results (from 'test_results/project_01-12-3-valgrd.tmp')
==8273== Memcheck, a memory error detector
==8273== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8273== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==8273== Command: ./minitar -t -f test.tar
==8273== Parent PID: 8013
==8273== 
==8273== Conditional jump or move depends on uninitialised value(s)
==8273==    at 0x109505: main (minitar_main.c:23)
==8273==  Uninitialised value was created by a stack allocation
==8273==    at 0x109449: main (minitar_main.c:7)
==8273== 
==8273== 
==8273== HEAP SUMMARY:
==8273==     in use at exit: 0 bytes in 0 blocks
==8273==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==8273== 
==8273== All heap blocks were freed -- no leaks are possible
==8273== 
==8273== For lists of detected and suppressed errors, rerun with: -s
==8273== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Step 4
Not executed due to error(s) in previous step
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Step 5
Not executed due to error(s) in previous step
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Step 6
Not executed due to error(s) in previous step
